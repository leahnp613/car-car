# flyctl launch added from ghi/app/.gitignore
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
ghi/app/node_modules
ghi/app/.pnp
ghi/app/**/.pnp.js

# testing
ghi/app/coverage

# production
ghi/app/build

# misc
ghi/app/**/.DS_Store
ghi/app/**/.env.local
ghi/app/**/.env.development.local
ghi/app/**/.env.test.local
ghi/app/**/.env.production.local

ghi/app/**/npm-debug.log*
ghi/app/**/yarn-debug.log*
ghi/app/**/yarn-error.log*

# flyctl launch added from inventory/.gitignore
# Byte-compiled / optimized / DLL files
inventory/**/__pycache__
inventory/**/*.py[cod]
inventory/**/*$py.class

# C extensions
inventory/**/*.so

# Distribution / packaging
inventory/**/.Python
inventory/**/build
inventory/**/develop-eggs
inventory/**/dist
inventory/**/downloads
inventory/**/eggs
inventory/**/.eggs
inventory/**/lib
inventory/**/lib64
inventory/**/parts
inventory/**/sdist
inventory/**/var
inventory/**/wheels
inventory/**/share/python-wheels
inventory/**/*.egg-info
inventory/**/.installed.cfg
inventory/**/*.egg
inventory/**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
inventory/**/*.manifest
inventory/**/*.spec

# Installer logs
inventory/**/pip-log.txt
inventory/**/pip-delete-this-directory.txt

# Unit test / coverage reports
inventory/**/htmlcov
inventory/**/.tox
inventory/**/.nox
inventory/**/.coverage
inventory/**/.coverage.*
inventory/**/.cache
inventory/**/nosetests.xml
inventory/**/coverage.xml
inventory/**/*.cover
inventory/**/*.py,cover
inventory/**/.hypothesis
inventory/**/.pytest_cache
inventory/**/cover

# Translations
inventory/**/*.mo
inventory/**/*.pot

# Django stuff:
inventory/**/*.log
inventory/**/local_settings.py
inventory/**/db.sqlite3
inventory/**/db.sqlite3-journal

# Flask stuff:
inventory/**/instance
inventory/**/.webassets-cache

# Scrapy stuff:
inventory/**/.scrapy

# Sphinx documentation
inventory/**/docs/_build

# PyBuilder
inventory/**/.pybuilder
inventory/**/target

# Jupyter Notebook
inventory/**/.ipynb_checkpoints

# IPython
inventory/**/profile_default
inventory/**/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
inventory/**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
inventory/**/__pypackages__

# Celery stuff
inventory/**/celerybeat-schedule
inventory/**/celerybeat.pid

# SageMath parsed files
inventory/**/*.sage.py

# Environments
inventory/**/.env
inventory/**/.venv
inventory/**/env
inventory/**/venv
inventory/**/ENV
inventory/**/env.bak
inventory/**/venv.bak

# Spyder project settings
inventory/**/.spyderproject
inventory/**/.spyproject

# Rope project settings
inventory/**/.ropeproject

# mkdocs documentation
inventory/site

# mypy
inventory/**/.mypy_cache
inventory/**/.dmypy.json
inventory/**/dmypy.json

# Pyre type checker
inventory/**/.pyre

# pytype static type analyzer
inventory/**/.pytype

# Cython debug symbols
inventory/**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# flyctl launch added from sales/.gitignore
# Byte-compiled / optimized / DLL files
sales/**/__pycache__
sales/**/*.py[cod]
sales/**/*$py.class

# C extensions
sales/**/*.so

# Distribution / packaging
sales/**/.Python
sales/**/build
sales/**/develop-eggs
sales/**/dist
sales/**/downloads
sales/**/eggs
sales/**/.eggs
sales/**/lib
sales/**/lib64
sales/**/parts
sales/**/sdist
sales/**/var
sales/**/wheels
sales/**/share/python-wheels
sales/**/*.egg-info
sales/**/.installed.cfg
sales/**/*.egg
sales/**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
sales/**/*.manifest
sales/**/*.spec

# Installer logs
sales/**/pip-log.txt
sales/**/pip-delete-this-directory.txt

# Unit test / coverage reports
sales/**/htmlcov
sales/**/.tox
sales/**/.nox
sales/**/.coverage
sales/**/.coverage.*
sales/**/.cache
sales/**/nosetests.xml
sales/**/coverage.xml
sales/**/*.cover
sales/**/*.py,cover
sales/**/.hypothesis
sales/**/.pytest_cache
sales/**/cover

# Translations
sales/**/*.mo
sales/**/*.pot

# Django stuff:
sales/**/*.log
sales/**/local_settings.py
sales/**/db.sqlite3
sales/**/db.sqlite3-journal

# Flask stuff:
sales/**/instance
sales/**/.webassets-cache

# Scrapy stuff:
sales/**/.scrapy

# Sphinx documentation
sales/**/docs/_build

# PyBuilder
sales/**/.pybuilder
sales/**/target

# Jupyter Notebook
sales/**/.ipynb_checkpoints

# IPython
sales/**/profile_default
sales/**/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
sales/**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
sales/**/__pypackages__

# Celery stuff
sales/**/celerybeat-schedule
sales/**/celerybeat.pid

# SageMath parsed files
sales/**/*.sage.py

# Environments
sales/**/.env
sales/**/.venv
sales/**/env
sales/**/venv
sales/**/ENV
sales/**/env.bak
sales/**/venv.bak

# Spyder project settings
sales/**/.spyderproject
sales/**/.spyproject

# Rope project settings
sales/**/.ropeproject

# mkdocs documentation
sales/site

# mypy
sales/**/.mypy_cache
sales/**/.dmypy.json
sales/**/dmypy.json

# Pyre type checker
sales/**/.pyre

# pytype static type analyzer
sales/**/.pytype

# Cython debug symbols
sales/**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# flyctl launch added from service/.gitignore
# Byte-compiled / optimized / DLL files
service/**/__pycache__
service/**/*.py[cod]
service/**/*$py.class

# C extensions
service/**/*.so

# Distribution / packaging
service/**/.Python
service/**/build
service/**/develop-eggs
service/**/dist
service/**/downloads
service/**/eggs
service/**/.eggs
service/**/lib
service/**/lib64
service/**/parts
service/**/sdist
service/**/var
service/**/wheels
service/**/share/python-wheels
service/**/*.egg-info
service/**/.installed.cfg
service/**/*.egg
service/**/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
service/**/*.manifest
service/**/*.spec

# Installer logs
service/**/pip-log.txt
service/**/pip-delete-this-directory.txt

# Unit test / coverage reports
service/**/htmlcov
service/**/.tox
service/**/.nox
service/**/.coverage
service/**/.coverage.*
service/**/.cache
service/**/nosetests.xml
service/**/coverage.xml
service/**/*.cover
service/**/*.py,cover
service/**/.hypothesis
service/**/.pytest_cache
service/**/cover

# Translations
service/**/*.mo
service/**/*.pot

# Django stuff:
service/**/*.log
service/**/local_settings.py
service/**/db.sqlite3
service/**/db.sqlite3-journal

# Flask stuff:
service/**/instance
service/**/.webassets-cache

# Scrapy stuff:
service/**/.scrapy

# Sphinx documentation
service/**/docs/_build

# PyBuilder
service/**/.pybuilder
service/**/target

# Jupyter Notebook
service/**/.ipynb_checkpoints

# IPython
service/**/profile_default
service/**/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
service/**/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
service/**/__pypackages__

# Celery stuff
service/**/celerybeat-schedule
service/**/celerybeat.pid

# SageMath parsed files
service/**/*.sage.py

# Environments
service/**/.env
service/**/.venv
service/**/env
service/**/venv
service/**/ENV
service/**/env.bak
service/**/venv.bak

# Spyder project settings
service/**/.spyderproject
service/**/.spyproject

# Rope project settings
service/**/.ropeproject

# mkdocs documentation
service/site

# mypy
service/**/.mypy_cache
service/**/.dmypy.json
service/**/dmypy.json

# Pyre type checker
service/**/.pyre

# pytype static type analyzer
service/**/.pytype

# Cython debug symbols
service/**/cython_debug

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
fly.toml
